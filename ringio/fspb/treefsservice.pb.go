// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: ringio/fspb/treefsservice.proto

package fspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsDir      bool                   `protobuf:"varint,2,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	Size       int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Hash       string                 `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	ModTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=mod_time,json=modTime,proto3" json:"mod_time,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *SubInfo) Reset() {
	*x = SubInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubInfo) ProtoMessage() {}

func (x *SubInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubInfo.ProtoReflect.Descriptor instead.
func (*SubInfo) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{0}
}

func (x *SubInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *SubInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SubInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SubInfo) GetModTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModTime
	}
	return nil
}

func (x *SubInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type Subs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubInfo []*SubInfo `protobuf:"bytes,1,rep,name=sub_info,json=subInfo,proto3" json:"sub_info,omitempty"`
}

func (x *Subs) Reset() {
	*x = Subs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subs) ProtoMessage() {}

func (x *Subs) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subs.ProtoReflect.Descriptor instead.
func (*Subs) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{1}
}

func (x *Subs) GetSubInfo() []*SubInfo {
	if x != nil {
		return x.SubInfo
	}
	return nil
}

type SpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space string `protobuf:"bytes,1,opt,name=space,proto3" json:"space,omitempty"`
}

func (x *SpaceRequest) Reset() {
	*x = SpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceRequest) ProtoMessage() {}

func (x *SpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceRequest.ProtoReflect.Descriptor instead.
func (*SpaceRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{2}
}

func (x *SpaceRequest) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

type NewSpaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space string `protobuf:"bytes,1,opt,name=space,proto3" json:"space,omitempty"`
	Cap   int64  `protobuf:"varint,2,opt,name=cap,proto3" json:"cap,omitempty"`
}

func (x *NewSpaceRequest) Reset() {
	*x = NewSpaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSpaceRequest) ProtoMessage() {}

func (x *NewSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSpaceRequest.ProtoReflect.Descriptor instead.
func (*NewSpaceRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{3}
}

func (x *NewSpaceRequest) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *NewSpaceRequest) GetCap() int64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

type TreeFileSystemBasicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space string `protobuf:"bytes,1,opt,name=space,proto3" json:"space,omitempty"`
	Base  string `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Hash  []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TreeFileSystemBasicRequest) Reset() {
	*x = TreeFileSystemBasicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeFileSystemBasicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeFileSystemBasicRequest) ProtoMessage() {}

func (x *TreeFileSystemBasicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeFileSystemBasicRequest.ProtoReflect.Descriptor instead.
func (*TreeFileSystemBasicRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{4}
}

func (x *TreeFileSystemBasicRequest) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *TreeFileSystemBasicRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *TreeFileSystemBasicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreeFileSystemBasicRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type RenameDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     *TreeFileSystemBasicRequest `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	NewName string                      `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *RenameDirRequest) Reset() {
	*x = RenameDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameDirRequest) ProtoMessage() {}

func (x *RenameDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameDirRequest.ProtoReflect.Descriptor instead.
func (*RenameDirRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{5}
}

func (x *RenameDirRequest) GetSrc() *TreeFileSystemBasicRequest {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *RenameDirRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type PutMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src      *TreeFileSystemBasicRequest `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Metadata []byte                      `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *PutMetadataRequest) Reset() {
	*x = PutMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMetadataRequest) ProtoMessage() {}

func (x *PutMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMetadataRequest.ProtoReflect.Descriptor instead.
func (*PutMetadataRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{6}
}

func (x *PutMetadataRequest) GetSrc() *TreeFileSystemBasicRequest {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *PutMetadataRequest) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BytesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BytesData) Reset() {
	*x = BytesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_treefsservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesData) ProtoMessage() {}

func (x *BytesData) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_treefsservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesData.ProtoReflect.Descriptor instead.
func (*BytesData) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_treefsservice_proto_rawDescGZIP(), []int{7}
}

func (x *BytesData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_ringio_fspb_treefsservice_proto protoreflect.FileDescriptor

var file_ringio_fspb_treefsservice_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x72, 0x69, 0x6e, 0x67, 0x69, 0x6f, 0x2f, 0x66, 0x73, 0x70, 0x62, 0x2f, 0x74, 0x72,
	0x65, 0x65, 0x66, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x66, 0x73, 0x70, 0x62, 0x1a, 0x17, 0x72, 0x69, 0x6e, 0x67, 0x69, 0x6f, 0x2f,
	0x66, 0x73, 0x70, 0x62, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x35, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x04, 0x53, 0x75, 0x62, 0x73, 0x12, 0x28, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x0f,
	0x4e, 0x65, 0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x63, 0x61, 0x70, 0x22, 0x6e, 0x0a, 0x1a, 0x54, 0x72, 0x65, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x61, 0x0a, 0x10, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x73,
	0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x12, 0x50, 0x75,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x66, 0x73, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x03, 0x73, 0x72, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x1f, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x32, 0xa5, 0x04, 0x0a, 0x15, 0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x4e,
	0x65, 0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b,
	0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x30, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x66,
	0x73, 0x70, 0x62, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x07, 0x4d, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x66, 0x73, 0x70,
	0x62, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x66,
	0x73, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x12, 0x20, 0x2e, 0x66,
	0x73, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b,
	0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x75, 0x62, 0x12, 0x20, 0x2e, 0x66, 0x73, 0x70,
	0x62, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x66,
	0x73, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x66, 0x73, 0x70, 0x62,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x73,
	0x70, 0x62, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x0b, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e,
	0x66, 0x73, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x66, 0x73, 0x70,
	0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x62, 0x6f, 0x72, 0x61, 0x64, 0x2f, 0x72, 0x69, 0x6e, 0x67, 0x69, 0x6f, 0x2f, 0x66,
	0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ringio_fspb_treefsservice_proto_rawDescOnce sync.Once
	file_ringio_fspb_treefsservice_proto_rawDescData = file_ringio_fspb_treefsservice_proto_rawDesc
)

func file_ringio_fspb_treefsservice_proto_rawDescGZIP() []byte {
	file_ringio_fspb_treefsservice_proto_rawDescOnce.Do(func() {
		file_ringio_fspb_treefsservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_ringio_fspb_treefsservice_proto_rawDescData)
	})
	return file_ringio_fspb_treefsservice_proto_rawDescData
}

var file_ringio_fspb_treefsservice_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ringio_fspb_treefsservice_proto_goTypes = []interface{}{
	(*SubInfo)(nil),                    // 0: fspb.SubInfo
	(*Subs)(nil),                       // 1: fspb.Subs
	(*SpaceRequest)(nil),               // 2: fspb.SpaceRequest
	(*NewSpaceRequest)(nil),            // 3: fspb.NewSpaceRequest
	(*TreeFileSystemBasicRequest)(nil), // 4: fspb.TreeFileSystemBasicRequest
	(*RenameDirRequest)(nil),           // 5: fspb.RenameDirRequest
	(*PutMetadataRequest)(nil),         // 6: fspb.PutMetadataRequest
	(*BytesData)(nil),                  // 7: fspb.BytesData
	(*timestamppb.Timestamp)(nil),      // 8: google.protobuf.Timestamp
	(*Error)(nil),                      // 9: fspb.Error
}
var file_ringio_fspb_treefsservice_proto_depIdxs = []int32{
	8,  // 0: fspb.SubInfo.mod_time:type_name -> google.protobuf.Timestamp
	8,  // 1: fspb.SubInfo.create_time:type_name -> google.protobuf.Timestamp
	0,  // 2: fspb.Subs.sub_info:type_name -> fspb.SubInfo
	4,  // 3: fspb.RenameDirRequest.src:type_name -> fspb.TreeFileSystemBasicRequest
	4,  // 4: fspb.PutMetadataRequest.src:type_name -> fspb.TreeFileSystemBasicRequest
	3,  // 5: fspb.TreeFileSystemService.NewSpace:input_type -> fspb.NewSpaceRequest
	2,  // 6: fspb.TreeFileSystemService.DeleteSpace:input_type -> fspb.SpaceRequest
	4,  // 7: fspb.TreeFileSystemService.MakeDir:input_type -> fspb.TreeFileSystemBasicRequest
	5,  // 8: fspb.TreeFileSystemService.RenameDir:input_type -> fspb.RenameDirRequest
	4,  // 9: fspb.TreeFileSystemService.DeleteDir:input_type -> fspb.TreeFileSystemBasicRequest
	4,  // 10: fspb.TreeFileSystemService.GetDirSub:input_type -> fspb.TreeFileSystemBasicRequest
	4,  // 11: fspb.TreeFileSystemService.GetMetadata:input_type -> fspb.TreeFileSystemBasicRequest
	6,  // 12: fspb.TreeFileSystemService.PutMetadata:input_type -> fspb.PutMetadataRequest
	4,  // 13: fspb.TreeFileSystemService.DeleteMetadata:input_type -> fspb.TreeFileSystemBasicRequest
	9,  // 14: fspb.TreeFileSystemService.NewSpace:output_type -> fspb.Error
	9,  // 15: fspb.TreeFileSystemService.DeleteSpace:output_type -> fspb.Error
	9,  // 16: fspb.TreeFileSystemService.MakeDir:output_type -> fspb.Error
	9,  // 17: fspb.TreeFileSystemService.RenameDir:output_type -> fspb.Error
	9,  // 18: fspb.TreeFileSystemService.DeleteDir:output_type -> fspb.Error
	1,  // 19: fspb.TreeFileSystemService.GetDirSub:output_type -> fspb.Subs
	7,  // 20: fspb.TreeFileSystemService.GetMetadata:output_type -> fspb.BytesData
	9,  // 21: fspb.TreeFileSystemService.PutMetadata:output_type -> fspb.Error
	9,  // 22: fspb.TreeFileSystemService.DeleteMetadata:output_type -> fspb.Error
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_ringio_fspb_treefsservice_proto_init() }
func file_ringio_fspb_treefsservice_proto_init() {
	if File_ringio_fspb_treefsservice_proto != nil {
		return
	}
	file_ringio_fspb_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ringio_fspb_treefsservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_treefsservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_treefsservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_treefsservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSpaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_treefsservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeFileSystemBasicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_treefsservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_treefsservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_treefsservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ringio_fspb_treefsservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ringio_fspb_treefsservice_proto_goTypes,
		DependencyIndexes: file_ringio_fspb_treefsservice_proto_depIdxs,
		MessageInfos:      file_ringio_fspb_treefsservice_proto_msgTypes,
	}.Build()
	File_ringio_fspb_treefsservice_proto = out.File
	file_ringio_fspb_treefsservice_proto_rawDesc = nil
	file_ringio_fspb_treefsservice_proto_goTypes = nil
	file_ringio_fspb_treefsservice_proto_depIdxs = nil
}
