// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: ringio/fspb/chunk-replica-info.proto

package fspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplicaChunkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkInfo    *HashChunkInfo `protobuf:"bytes,1,opt,name=chunk_info,json=chunkInfo,proto3" json:"chunk_info,omitempty"`
	Master       bool           `protobuf:"varint,2,opt,name=master,proto3" json:"master,omitempty"`
	ReplicaCount int64          `protobuf:"varint,3,opt,name=replica_count,json=replicaCount,proto3" json:"replica_count,omitempty"`
	Checksum     []byte         `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	NodeIds      []string       `protobuf:"bytes,5,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	// custom map[string]string
	Custom map[string]string `protobuf:"bytes,6,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReplicaChunkInfo) Reset() {
	*x = ReplicaChunkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaChunkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaChunkInfo) ProtoMessage() {}

func (x *ReplicaChunkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaChunkInfo.ProtoReflect.Descriptor instead.
func (*ReplicaChunkInfo) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_chunk_replica_info_proto_rawDescGZIP(), []int{0}
}

func (x *ReplicaChunkInfo) GetChunkInfo() *HashChunkInfo {
	if x != nil {
		return x.ChunkInfo
	}
	return nil
}

func (x *ReplicaChunkInfo) GetMaster() bool {
	if x != nil {
		return x.Master
	}
	return false
}

func (x *ReplicaChunkInfo) GetReplicaCount() int64 {
	if x != nil {
		return x.ReplicaCount
	}
	return 0
}

func (x *ReplicaChunkInfo) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *ReplicaChunkInfo) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *ReplicaChunkInfo) GetCustom() map[string]string {
	if x != nil {
		return x.Custom
	}
	return nil
}

// Stream
type PutReplicaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Info *ReplicaChunkInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PutReplicaRequest) Reset() {
	*x = PutReplicaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutReplicaRequest) ProtoMessage() {}

func (x *PutReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutReplicaRequest.ProtoReflect.Descriptor instead.
func (*PutReplicaRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_chunk_replica_info_proto_rawDescGZIP(), []int{1}
}

func (x *PutReplicaRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PutReplicaRequest) GetInfo() *ReplicaChunkInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Stream
type GetReplicaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []byte            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Info  *ReplicaChunkInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Error *Error            `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetReplicaResponse) Reset() {
	*x = GetReplicaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicaResponse) ProtoMessage() {}

func (x *GetReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicaResponse.ProtoReflect.Descriptor instead.
func (*GetReplicaResponse) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_chunk_replica_info_proto_rawDescGZIP(), []int{2}
}

func (x *GetReplicaResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetReplicaResponse) GetInfo() *ReplicaChunkInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetReplicaResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CheckReplicaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReplicaChunkInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CheckReplicaRequest) Reset() {
	*x = CheckReplicaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReplicaRequest) ProtoMessage() {}

func (x *CheckReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReplicaRequest.ProtoReflect.Descriptor instead.
func (*CheckReplicaRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_chunk_replica_info_proto_rawDescGZIP(), []int{3}
}

func (x *CheckReplicaRequest) GetInfo() *ReplicaChunkInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SyncReplicaInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReplicaChunkInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SyncReplicaInfoRequest) Reset() {
	*x = SyncReplicaInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReplicaInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReplicaInfoRequest) ProtoMessage() {}

func (x *SyncReplicaInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ringio_fspb_chunk_replica_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReplicaInfoRequest.ProtoReflect.Descriptor instead.
func (*SyncReplicaInfoRequest) Descriptor() ([]byte, []int) {
	return file_ringio_fspb_chunk_replica_info_proto_rawDescGZIP(), []int{4}
}

func (x *SyncReplicaInfoRequest) GetInfo() *ReplicaChunkInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_ringio_fspb_chunk_replica_info_proto protoreflect.FileDescriptor

var file_ringio_fspb_chunk_replica_info_proto_rawDesc = []byte{
	0x0a, 0x24, 0x72, 0x69, 0x6e, 0x67, 0x69, 0x6f, 0x2f, 0x66, 0x73, 0x70, 0x62, 0x2f, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x2d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2d, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x73, 0x70, 0x62, 0x1a, 0x1b, 0x72, 0x69,
	0x6e, 0x67, 0x69, 0x6f, 0x2f, 0x66, 0x73, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x69, 0x6e, 0x67, 0x69,
	0x6f, 0x2f, 0x66, 0x73, 0x70, 0x62, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x73,
	0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x1a, 0x39, 0x0a, 0x0b, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x66, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x77, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x73, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x16, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x66, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x18, 0x5a,
	0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x62, 0x6f, 0x72, 0x61, 0x64, 0x2f, 0x72, 0x69, 0x6e, 0x67,
	0x69, 0x6f, 0x2f, 0x66, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ringio_fspb_chunk_replica_info_proto_rawDescOnce sync.Once
	file_ringio_fspb_chunk_replica_info_proto_rawDescData = file_ringio_fspb_chunk_replica_info_proto_rawDesc
)

func file_ringio_fspb_chunk_replica_info_proto_rawDescGZIP() []byte {
	file_ringio_fspb_chunk_replica_info_proto_rawDescOnce.Do(func() {
		file_ringio_fspb_chunk_replica_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_ringio_fspb_chunk_replica_info_proto_rawDescData)
	})
	return file_ringio_fspb_chunk_replica_info_proto_rawDescData
}

var file_ringio_fspb_chunk_replica_info_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ringio_fspb_chunk_replica_info_proto_goTypes = []interface{}{
	(*ReplicaChunkInfo)(nil),       // 0: fspb.ReplicaChunkInfo
	(*PutReplicaRequest)(nil),      // 1: fspb.PutReplicaRequest
	(*GetReplicaResponse)(nil),     // 2: fspb.GetReplicaResponse
	(*CheckReplicaRequest)(nil),    // 3: fspb.CheckReplicaRequest
	(*SyncReplicaInfoRequest)(nil), // 4: fspb.SyncReplicaInfoRequest
	nil,                            // 5: fspb.ReplicaChunkInfo.CustomEntry
	(*HashChunkInfo)(nil),          // 6: fspb.HashChunkInfo
	(*Error)(nil),                  // 7: fspb.Error
}
var file_ringio_fspb_chunk_replica_info_proto_depIdxs = []int32{
	6, // 0: fspb.ReplicaChunkInfo.chunk_info:type_name -> fspb.HashChunkInfo
	5, // 1: fspb.ReplicaChunkInfo.custom:type_name -> fspb.ReplicaChunkInfo.CustomEntry
	0, // 2: fspb.PutReplicaRequest.info:type_name -> fspb.ReplicaChunkInfo
	0, // 3: fspb.GetReplicaResponse.info:type_name -> fspb.ReplicaChunkInfo
	7, // 4: fspb.GetReplicaResponse.error:type_name -> fspb.Error
	0, // 5: fspb.CheckReplicaRequest.info:type_name -> fspb.ReplicaChunkInfo
	0, // 6: fspb.SyncReplicaInfoRequest.info:type_name -> fspb.ReplicaChunkInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_ringio_fspb_chunk_replica_info_proto_init() }
func file_ringio_fspb_chunk_replica_info_proto_init() {
	if File_ringio_fspb_chunk_replica_info_proto != nil {
		return
	}
	file_ringio_fspb_chunkinfo_proto_init()
	file_ringio_fspb_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ringio_fspb_chunk_replica_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaChunkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_chunk_replica_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutReplicaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_chunk_replica_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReplicaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_chunk_replica_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckReplicaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ringio_fspb_chunk_replica_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReplicaInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ringio_fspb_chunk_replica_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ringio_fspb_chunk_replica_info_proto_goTypes,
		DependencyIndexes: file_ringio_fspb_chunk_replica_info_proto_depIdxs,
		MessageInfos:      file_ringio_fspb_chunk_replica_info_proto_msgTypes,
	}.Build()
	File_ringio_fspb_chunk_replica_info_proto = out.File
	file_ringio_fspb_chunk_replica_info_proto_rawDesc = nil
	file_ringio_fspb_chunk_replica_info_proto_goTypes = nil
	file_ringio_fspb_chunk_replica_info_proto_depIdxs = nil
}
