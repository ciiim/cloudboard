syntax = "proto3";

import "ringio/fspb/error.proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package fspb;

option go_package = "cloudborad/ringio/fspb";


message SubInfo {
    string name = 1;
    bool is_dir = 2;
    int64 size = 3;
    string hash = 4;
    google.protobuf.Timestamp mod_time = 5;
    google.protobuf.Timestamp create_time = 6;
    
}

message SpaceInfos {
    repeated string space_name = 1;
}

message Subs {
    repeated SubInfo sub_info = 1;
}

message SpaceStat {
    string key = 1;
    string value = 2;
}

message GetSpaceStatRequest {
    SpaceRequest space = 1;
    string key = 2;
}

message GetSpaceStatResponse {
    SpaceStat stat = 1;
}

message SetSpaceStatRequest {
    SpaceRequest space = 1;
    SpaceStat stat = 2;
}

message SpaceRequest {
    string space = 1;
}

message NewSpaceRequest {
    string space = 1;
    int64 cap = 2;
}

message TreeFileSystemBasicRequest {
    string space = 1;
    string base = 2;
    string name = 3;
    bytes hash = 4;
}

message RenameDirRequest {
    TreeFileSystemBasicRequest src = 1;
    string new_name = 2;
}

message PutMetadataRequest {
    TreeFileSystemBasicRequest src = 1;
    bytes metadata = 2;
}

message BytesData {
    bytes data = 1;
}


service TreeFileSystemService {
    rpc NewSpace(NewSpaceRequest) returns (Error) {}
    rpc DeleteSpace(SpaceRequest) returns (Error) {}

    rpc AllSpaces(google.protobuf.Empty) returns (SpaceInfos) {}

    rpc GetSpaceStat(GetSpaceStatRequest) returns (GetSpaceStatResponse) {}
    rpc SetSpaceStat(SetSpaceStatRequest) returns (Error) {}

    rpc MakeDir(TreeFileSystemBasicRequest) returns (Error) {}
    rpc RenameDir(RenameDirRequest) returns (Error) {}
    rpc DeleteDir(TreeFileSystemBasicRequest) returns (Error) {}
    rpc GetDirSub(TreeFileSystemBasicRequest) returns (Subs) {}

    rpc GetMetadata(TreeFileSystemBasicRequest) returns (BytesData) {}
    rpc PutMetadata(PutMetadataRequest) returns (Error) {}
    rpc DeleteMetadata(TreeFileSystemBasicRequest) returns (Error) {}
}
